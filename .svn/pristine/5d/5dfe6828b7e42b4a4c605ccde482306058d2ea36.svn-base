//
//  OptionViewController.m
//  test
//
//  Created by 陈 忠杰 on 13-9-16.
//  Copyright (c) 2013年 陈 忠杰. All rights reserved.
//

#import "OptionViewController.h"
#import "MsgModel.h"
#import "EventManager.h"

@interface OptionViewController ()

@end

@implementation OptionViewController

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
	// Do any additional setup after loading the view.
    
    NSString *plistPath = [[NSBundle mainBundle] pathForResource:@"WordList" ofType:@"plist"];
    _titleDic = [[NSMutableDictionary alloc] initWithContentsOfFile:plistPath];
    
    //addButton
    UIBarButtonItem *addButton = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemAdd target:self action:@selector(addOption:)];
    self.navigationItem.rightBarButtonItem = addButton;
    
    [[SubscribeModel sharedModel] pushObserver:self];
    self.newOption = [[OptionVO alloc] init];
    
    //init
    NSMutableArray* _arrayOption = [[EventManager sharedEventManager] arrayOption];
    if (!_arrayOption)
    {
        NSMutableArray* arrayOption = [[NSMutableArray alloc] init];
        [[EventManager sharedEventManager] setArrayOption:arrayOption];
        
        __objects = [[NSMutableArray alloc] init];
        
        NSArray* arrayEvent = [_titleDic objectForKey:@"Option"];
        self.newOption.title = [arrayEvent objectAtIndex:0];
        [__objects addObject:self.newOption];
    }
    else
    {
        __objects = _arrayOption;
    }
}

-(void)receiveData:(DataVO *)data
{
    if(data.module == 2007)
    {
        NSNumber* result = [data.data objectForKey:@"result"];
        if([result isEqual:[NSNumber numberWithInt:1]])
        {
            NSMutableArray* arrayOption = [[EventManager sharedEventManager] arrayOption];
            [arrayOption addObject:self.newOption];
            [self.newOption release];
            self.newOption = [[OptionVO alloc] init];
        }
    }
}

-(void)addOption:(id)sender
{
    if (!self.newOption.title)
    {
        if (!__objects) {
            __objects = [[NSMutableArray alloc] init];
        }
        [self.optionTableView beginUpdates];
        
        NSArray* arrayEvent = [_titleDic objectForKey:@"Option"];
        self.newOption.title = [arrayEvent objectAtIndex:0];
        [__objects insertObject:self.newOption atIndex:0];
        
        NSIndexPath *indexPath = [NSIndexPath indexPathForRow:0 inSection:0];
        NSArray* pArray = [NSArray arrayWithObject:indexPath];
        [self.optionTableView insertRowsAtIndexPaths:pArray withRowAnimation:UITableViewRowAnimationAutomatic];
        [self.optionTableView insertSections:[NSIndexSet indexSetWithIndex:0] withRowAnimation:UITableViewRowAnimationTop];
        [self.optionTableView endUpdates];
    }
    else
    {
        NSMutableDictionary * __data = [[NSMutableDictionary alloc] init];
        NSString* strId = [[EventManager sharedEventManager] eventId];
        
        int isOpen = self.newOption.isOpen ? 1 : 0;
        [__data setValue:self.newOption.title forKey:@"sTitle"];
        [__data setValue:strId forKey:@"event"];
        [__data setValue:@"" forKey:@"optionValue"];
        [__data setValue:[NSString stringWithFormat:@"%d",isOpen] forKey:@"isOpen"];
        [[MsgModel sharedModel] sendMsg:2007 withData:__data];
    }
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark - Table View

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return [__objects count];
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return 1;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    UITableViewCell *cell;
    cell = [tableView dequeueReusableCellWithIdentifier:@"OptionCell" forIndexPath:indexPath];
    NSArray* arrayEvent = [_titleDic objectForKey:@"Option"];
    
    // 自定义文本信息1
//    UILabel *label1 = [[UILabel alloc] initWithFrame:CGRectMake(10, 10, 100, 20)];
//    NSString* title1 = [arrayEvent objectAtIndex:0];
//    label1.text = [NSString stringWithFormat:@"%@%d", title1, indexPath.section + 1];
//    label1.backgroundColor = [UIColor clearColor];
//    label1.font = [UIFont fontWithName:@"TrebuchetMS-Bold" size:18];
//    [cell.contentView addSubview:label1];
    
    UILabel *label2 = [[UILabel alloc] initWithFrame:CGRectMake(10, 120, 100, 20)];
    NSString* title2 = [arrayEvent objectAtIndex:1];
    label2.text = title2;
    label2.backgroundColor = [UIColor clearColor];
    label2.font = [UIFont fontWithName:@"TrebuchetMS-Bold" size:18];
    [cell.contentView addSubview:label2];
    
    UITextField *textField = [[UITextField alloc] initWithFrame:CGRectMake(10, 10, 160, 30)];
    int index = indexPath.section;
    OptionVO* vo = [__objects objectAtIndex:index];
    if (vo)
    {
        textField.text = vo.title;
    }
    else
    {
        textField.text = [arrayEvent objectAtIndex:0];
    }
    textField.tag = indexPath.section * 10 + indexPath.row;
    textField.backgroundColor = [UIColor clearColor];
    textField.returnKeyType = UIReturnKeyDone;
    textField.font = [UIFont fontWithName:@"TrebuchetMS-Bold" size:18];
    textField.delegate = self;
    [cell.contentView addSubview:textField];
    [textField addTarget:self action:@selector(textFieldWithText:) forControlEvents:UIControlEventEditingChanged];
    
    UISwitch *switchView = [[UISwitch alloc] initWithFrame:CGRectMake(154.0f, 16.0f, 100.0f, 28.0f)];
    switchView.tag = indexPath.section * 10 + indexPath.row;
    [switchView addTarget:self action:@selector(switchAction:) forControlEvents:UIControlEventValueChanged];
    
    return cell;
}

- (BOOL)tableView:(UITableView *)tableView canEditRowAtIndexPath:(NSIndexPath *)indexPath
{
    // Return NO if you do not want the specified item to be editable.
    return NO;
}

- (void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (editingStyle == UITableViewCellEditingStyleDelete)
    {
        
        [tableView deleteRowsAtIndexPaths:@[indexPath] withRowAnimation:UITableViewRowAnimationFade];
    } else if (editingStyle == UITableViewCellEditingStyleInsert)
    {
        // Create a new instance of the appropriate class, insert it into the array, and add a new row to the table view.
    }
}

/*
 // Override to support rearranging the table view.
 - (void)tableView:(UITableView *)tableView moveRowAtIndexPath:(NSIndexPath *)fromIndexPath toIndexPath:(NSIndexPath *)toIndexPath
 {
 }
 */

/*
 // Override to support conditional rearranging of the table view.
 - (BOOL)tableView:(UITableView *)tableView canMoveRowAtIndexPath:(NSIndexPath *)indexPath
 {
 // Return NO if you do not want the item to be re-orderable.
 return YES;
 }
 */

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
}

-(CGFloat)tableView:(UITableView*)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 150;
}

#pragma mark - UITextViewDelegate
- (BOOL)textViewShouldBeginEditing:(UITextView *)textView
{
    return NO;
}

#pragma mark - UISwitchDelegate
- (IBAction)switchAction:(id)sender {
    UISwitch *switchButton = (UISwitch*)sender;
    switch (switchButton.tag) {
        case 0:
        {
            BOOL isButtonOn = [switchButton isOn];
            self.newOption.isOpen = isButtonOn;
            break;
        }
        default:
            break;
    }

}

#pragma mark - textField Delegate
- (void)textFieldWithText:(UITextField *)textField
{
    switch (textField.tag) {
        case 0:
            self.newOption.title = textField.text;
            break;
        default:
            break;
    }
}

- (BOOL)textFieldShouldReturn:(UITextField *)textField {
    [textField resignFirstResponder];
    return YES;
}
@end
